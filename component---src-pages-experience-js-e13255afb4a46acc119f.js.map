{"version":3,"sources":["webpack://personal-website/./node_modules/@chakra-ui/layout/dist/esm/heading.js","webpack://personal-website/./node_modules/@chakra-ui/layout/dist/esm/grid.js","webpack://personal-website/./node_modules/@chakra-ui/layout/dist/esm/simple-grid.js","webpack://personal-website/./src/components/experienceCard.js","webpack://personal-website/./src/images/manchester.png","webpack://personal-website/./src/images/edinburgh.png","webpack://personal-website/./src/components/education.js","webpack://personal-website/./src/images/kratos.png","webpack://personal-website/./src/images/waters.jpg","webpack://personal-website/./src/components/work.js","webpack://personal-website/./src/pages/experience.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","Heading","props","ref","styles","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","className","cx","__css","displayName","Grid","area","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","SimpleGrid","count","width","columns","spacingX","spacingY","spacing","minChildWidth","value","n","ExperienceCard","title","description","image","py","maxW","w","bg","useColorModeValue","boxShadow","rounded","p","overflow","align","justify","mb","color","textTransform","fontWeight","fontSize","letterSpacing","Education","textAlign","as","size","base","md","src","edinburgh","manchester","Work","kratos","waters"],"mappings":"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","file":"component---src-pages-experience-js-e13255afb4a46acc119f.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nexport var Heading = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Heading\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(chakra.h2, _extends({\n    ref: ref,\n    className: cx(\"chakra-heading\", props.className)\n  }, rest, {\n    __css: styles\n  }));\n});\n\nif (__DEV__) {\n  Heading.displayName = \"Heading\";\n}","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { filterUndefined, mapResponsive, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/grid\n */\n\nexport var Grid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var area = props.area,\n      templateAreas = props.templateAreas,\n      gap = props.gap,\n      rowGap = props.rowGap,\n      columnGap = props.columnGap,\n      column = props.column,\n      row = props.row,\n      autoFlow = props.autoFlow,\n      autoRows = props.autoRows,\n      templateRows = props.templateRows,\n      autoColumns = props.autoColumns,\n      templateColumns = props.templateColumns,\n      rest = _objectWithoutPropertiesLoose(props, [\"area\", \"templateAreas\", \"gap\", \"rowGap\", \"columnGap\", \"column\", \"row\", \"autoFlow\", \"autoRows\", \"templateRows\", \"autoColumns\", \"templateColumns\"]);\n\n  var styles = {\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\";\n}\n\nfunction spanFn(span) {\n  return mapResponsive(span, function (value) {\n    return value === \"auto\" ? \"auto\" : \"span \" + value + \"/span \" + value;\n  });\n}\n\nexport var GridItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var colSpan = props.colSpan,\n      colStart = props.colStart,\n      colEnd = props.colEnd,\n      rowEnd = props.rowEnd,\n      rowSpan = props.rowSpan,\n      rowStart = props.rowStart,\n      rest = _objectWithoutPropertiesLoose(props, [\"colSpan\", \"colStart\", \"colEnd\", \"rowEnd\", \"rowSpan\", \"rowStart\"]);\n\n  var styles = filterUndefined({\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive, isNumber, isNull, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { Grid } from \"./grid\";\n/**\n * SimpleGrid\n *\n * React component make that providers a simpler interface, and\n * make its easy to create responsive grid layouts.\n *\n * @see Docs https://chakra-ui.com/simplegrid\n */\n\nexport var SimpleGrid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var columns = props.columns,\n      spacingX = props.spacingX,\n      spacingY = props.spacingY,\n      spacing = props.spacing,\n      minChildWidth = props.minChildWidth,\n      rest = _objectWithoutPropertiesLoose(props, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, rest));\n});\n\nif (__DEV__) {\n  SimpleGrid.displayName = \"SimpleGrid\";\n}\n\nfunction toPx(n) {\n  return isNumber(n) ? n + \"px\" : n;\n}\n\nfunction widthToColumns(width) {\n  return mapResponsive(width, function (value) {\n    return isNull(value) ? null : \"repeat(auto-fit, minmax(\" + toPx(value) + \", 1fr))\";\n  });\n}\n\nfunction countToColumns(count) {\n  return mapResponsive(count, function (value) {\n    return isNull(value) ? null : \"repeat(\" + value + \", minmax(0, 1fr))\";\n  });\n}","import * as React from \"react\"\nimport {\n    Box,\n    Center,\n    Text,\n    Stack,\n    useColorModeValue, Flex,\n} from '@chakra-ui/react';\n\nexport default function ExperienceCard({title, description, image}) {\n    return (\n        <Center py={6}>\n            <Box\n                maxW={'445px'}\n                w={'full'}\n                bg={useColorModeValue('white', 'gray.900')}\n                boxShadow={'2xl'}\n                rounded={'md'}\n                p={6}\n                overflow={'hidden'}>\n                <Stack>\n                    <Flex\n                        align={'center'}\n                        justify={'center'}\n                        mb={1}>\n                        {image}\n                    </Flex>\n                    <Stack>\n                        <Text\n                            color={'green.500'}\n                            textTransform={'uppercase'}\n                            fontWeight={800}\n                            fontSize={'sm'}\n                            letterSpacing={1.1}>\n                            {title}\n                        </Text>\n                        <Text color={'gray.500'}>\n                            {description}\n                        </Text>\n                    </Stack>\n                </Stack>\n            </Box>\n        </Center>\n    );\n}\n","export default __webpack_public_path__ + \"static/manchester-87e1f5facb5635883b35b8815a1eaa7b.png\";","export default __webpack_public_path__ + \"static/edinburgh-392e1f0da01d9855906ba6d6eb26bf35.png\";","import * as React from \"react\"\nimport {Box, SimpleGrid, Image, Heading} from '@chakra-ui/react';\nimport ExperienceCard from \"./experienceCard\";\nimport manchester from '../images/manchester.png';\nimport edinburgh from '../images/edinburgh.png';\n\nexport default function Education() {\n    return (\n        <Box p={4}\n        >\n            <Heading\n                textAlign={'center'}\n                textTransform={'uppercase'}\n                fontWeight={800}\n                letterSpacing={1.1}\n                as=\"h4\"\n                size=\"lg\">\n                🎓 Education\n            </Heading>\n            <SimpleGrid columns={{ base: 1, md: 3 }} spacing={10}>\n                <ExperienceCard\n                    title={'2021 - 2022 MSc Data Science'}\n                    description={\n                        'Studying how to efficiently find patterns in these vast streams of data. This means taking ' +\n                        'modules on Machine Learning, Statistics, Optimization, Databases and Data Management. Hoping ' +\n                        'to tailor my dissertation towards an environmental challenge where these skills can be applied. '\n                    }\n                    image={<Image src={edinburgh}/>}\n                />\n                <ExperienceCard\n                    title={'2014 - 2017 Bachelor of Science (Physics) with Honours'}\n                    description={\n                        'Gained a good understanding of many physical systems and excellent mathematical abilities in areas covering ' +\n                        'calculus, linear algebra, mathematical reasoning, probability and statistics, learnt from ' +\n                        'dedicated courses and from applying the appropriate\\n' +\n                        'mathematics to different areas of physics.'\n                    }\n                    image={<Image src={manchester}/>}\n                />\n                <ExperienceCard\n                    title={'2013 - 2014 Physics Foundation Degree'}\n                    description={\n                        'Progression from foundation year required an average year grade of 80% which was achieved by\\n' +\n                        'averaging 93%; amongst the highest in my cohort.'\n                    }\n                    image={<Image src={manchester}/>}\n                />\n            </SimpleGrid>\n        </Box>\n    );\n}\n","export default __webpack_public_path__ + \"static/kratos-65397a92a20e5c57dee5f81c02540abc.png\";","export default __webpack_public_path__ + \"static/waters-9afbcd71f75270102f56baeafcca43d4.jpg\";","import * as React from \"react\"\nimport {Box, SimpleGrid, Image, Heading} from '@chakra-ui/react';\nimport ExperienceCard from \"./experienceCard\";\nimport kratos from '../images/kratos.png';\nimport waters from '../images/waters.jpg';\n\nexport default function Work() {\n    return (\n        <Box p={4}\n        >\n            <Heading\n                textAlign={'center'}\n                textTransform={'uppercase'}\n                fontWeight={800}\n                letterSpacing={1.1}\n                as=\"h4\"\n                size=\"lg\">\n                💼 Work\n            </Heading>\n            <SimpleGrid columns={{ base: 1, md: 3 }} spacing={10}>\n                <ExperienceCard\n                    title={'Software Engineer'}\n                    description={\n                        ''\n                    }\n                    image={<Image src={kratos}/>}\n                />\n                <ExperienceCard\n                    title={'Junior Software Engineer'}\n                    description={\n                        ''\n                    }\n                    image={<Image src={waters}/>}\n                />\n                <ExperienceCard\n                    title={'Mass Spectrometer Development Scientist'}\n                    description={\n                        ''\n                    }\n                    image={<Image src={waters}/>}\n                />\n            </SimpleGrid>\n        </Box>\n    );\n}\n","import * as React from \"react\"\nimport Page from \"./page\";\nimport Education from \"../components/education\";\nimport Work from \"../components/work\";\nimport {Stack} from \"@chakra-ui/react\";\n\nconst Experience = () => {\n    return <Page>\n        <Stack>\n            <Education/>\n            <Work/>\n        </Stack>\n    </Page>\n}\n\nexport default Experience\n"],"sourceRoot":""}